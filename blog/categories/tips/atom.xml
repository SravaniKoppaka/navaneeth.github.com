<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | {love to code}]]></title>
  <link href="http://navaneeth.github.io/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://navaneeth.github.io/"/>
  <updated>2015-05-21T11:11:07+05:30</updated>
  <id>http://navaneeth.github.io/</id>
  <author>
    <name><![CDATA[nkn]]></name>
    <email><![CDATA[navaneethkn@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Starting &amp; stopping redis on OS X]]></title>
    <link href="http://navaneeth.github.io/blog/2014/11/25/starting-and-stopping-redis-on-os-x/"/>
    <updated>2014-11-25T12:32:04+05:30</updated>
    <id>http://navaneeth.github.io/blog/2014/11/25/starting-and-stopping-redis-on-os-x</id>
    <content type="html"><![CDATA[<p>The easiest way to install <code>redis</code> on OS X is to run:</p>

<p><code>bash
brew install redis
</code></p>

<p>To ease starting &amp; stopping the server, I have added the following aliases into my <code>.zshrc</code>:</p>

<p><code>bash
alias startredis="redis-server /usr/local/etc/redis.conf"
alias stopredis="redis-cli shutdown"
</code></p>

<p>Now I can just do <em>startredis</em> and <em>stopredis</em> to manage the redis server</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hiding menu when clicking outside - AngularJS]]></title>
    <link href="http://navaneeth.github.io/blog/2014/09/28/hiding-menu-when-clicking-outside-angularjs/"/>
    <updated>2014-09-28T11:29:28+05:30</updated>
    <id>http://navaneeth.github.io/blog/2014/09/28/hiding-menu-when-clicking-outside-angularjs</id>
    <content type="html"><![CDATA[<p>Assume you have a menu which looks like the following:</p>

<p>```html</p>

<div class="right-menu" ng-click="toggleMenu($event);">
  <img src="img/RightMenuIcon.png" alt="" />
</div>




<div ng-show="menuOpened" class="menu-dropdown-right">
  <ul>
    <li ng-hide="loggedIn" class="class"><a href="#/authenticate">Login</a>
    </li>
    <li ng-show="loggedIn"  ng-click="logOut()"><a href="#">Logout</a>
    </li>
  </ul>
</div>


<p>```</p>

<p>When the div gets a click event, angular calls <code>toggleMenu</code> which toggles the <code>menuOpened</code> variable. Changing the value of this variable in turn makes the div show/hide.</p>

<p>To hide the menu when clicking outside of the div, we add a <code>onclick</code> handler to <code>window</code> object which checks the <code>menuOpened</code> variable and updates it if the menu is visible.</p>

<p>Here is the code for <code>MenuCtrl</code> and the <code>onclick</code> handler:</p>

<p>```js
angularApp.controller(&lsquo;MenuCtrl&rsquo;, [&lsquo;$scope&rsquo;, &lsquo;$location&rsquo;, &lsquo;$rootScope&rsquo;,</p>

<p>  function($scope, $location, $rootScope) {</p>

<pre><code>    $scope.menuOpened = false;

    $scope.toggleMenu = function(event) {
        $scope.menuOpened = !($scope.menuOpened);

  // Important part in the implementation
  // Stopping event propagation means window.onclick won't get called when someone clicks
  // on the menu div. Without this, menu will be hidden immediately
        event.stopPropagation();
    };

    window.onclick = function() {
        if ($scope.menuOpened) {
            $scope.menuOpened = false;

    // You should let angular know about the update that you have made, so that it can refresh the UI
            $scope.$apply();
        }
    };

}
</code></pre>

<p>]);
```</p>
]]></content>
  </entry>
  
</feed>
